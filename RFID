#include <SoftwareSerial.h>
#include <string.h>
SoftwareSerial RFIDentrada(11, 10); // RX -- TX
SoftwareSerial RFIDsalida(8, 3); // RX -- TX
int cantidadParqueosPreferenciales= 10;
int cantidadParqueosGenerales = 20;
int datosRFID; // CAPTURA LOS DATOS RFID
int arrTarjetaAcceso[14] = {
0,0,0,0,0,0,0,0,0,0,0,0,0,0}; // TARJETA QUE SE LEE DEL RFID
/*BASE DE DATOS DE TARJETAS DE ACCESO, SI LA TARJETA NO ESTA AQUI NO SERA AUTORIZADA*/
int arrTarjeta1[15] = {
1,2,48,51,48,48,55,52,50,53,49,56,52,65,3}; // TARJETA 9496, PRIMER DIGITO 1 INDICA QUE EL CAMPO ES PREFERENCIAL
int arrTarjeta2[15] = {
0,2,48,51,48,48,55,53,49,55,48,57,54,56,3}; // TARJETA 5897, PRIMER DIGITO 0 INDICA QUE EL CAMPO ES REGULAR
void setup()
{
//RFIDentrada.begin(9600); // INICIAR CONEXION SERIAL AL RFID ENTRADA
RFIDsalida.begin(9600);
Serial.begin(9600); // CONEXION SERIAL A LA PC
}
void loop()
{
//leerTarjetaEntrada();
leerTarjetaSalida();
}
void leerTarjetaEntrada()
{
if (RFIDentrada.available() > 0) //LEER LA TARJETA
{
delay(100); // TIEMPO PARA LEER LA TARJETA
for (int z = 0 ; z < 14 ; z++) // LEER LA TARJETA Y ALMACENARLA EN UN ARRAY
{
datosRFID= RFIDentrada.read();
arrTarjetaAcceso[z] = datosRFID;
}
RFIDentrada.flush(); // TERMINAR LA LECTURA
//SI SE DESEA VER EL NUMERO DE TARJETA EN EL SERIAL MONITOR, SE DEBE DESCOMENTAR LA SECCION DE ABAJO
for(int i = 0; i < 14; i++) {
Serial.print(arrTarjetaAcceso[i]);
}
Serial.println();
compararTarjetas();
}
}
void leerTarjetaSalida()
{
if (RFIDsalida.available() > 0) //LEER LA TARJETA
{
delay(100); // TIEMPO PARA LEER LA TARJETA
for (int z = 0 ; z < 14 ; z++) // LEER LA TARJETA Y ALMACENARLA EN UN ARRAY
{
datosRFID= RFIDsalida.read();
arrTarjetaAcceso[z] = datosRFID;
}
RFIDsalida.flush(); // TERMINAR LA LECTURA
//SI SE DESEA VER EL NUMERO DE TARJETA EN EL SERIAL MONITOR, SE DEBE DESCOMENTAR LA SECCION DE ABAJO
for(int i = 0; i < 14; i++) {
Serial.print(arrTarjetaAcceso[i]);
}
Serial.println();
compararTarjetas();
}
}
boolean comparadorTarjetas(int arrTarjetaBD[15], int arrTarjetaLeida[14]) // COMPARA LAS TARJETAS EN BD CON LA TARJETA QUE SE LEE.
{
boolean boolVerificarTarjeta = false;
int intVerificadorTarjeta = 0;
for (int c = 0 ; c<15 ; c++)
{
if (arrTarjetaBD[c+1] == arrTarjetaLeida[c])
{
intVerificadorTarjeta++;
}
}
if (intVerificadorTarjeta == 14)
{
boolVerificarTarjeta = true;
}
return boolVerificarTarjeta;
}
void compararTarjetas() // COMPARA LAS TARJETAS EN BD CON LA TARJETA QUE SE LEE.
{
if (comparadorTarjetas(arrTarjeta1 , arrTarjetaAcceso) == true)
{
Serial.print("Tarjeta encontrada!!\n");
}
else if (comparadorTarjetas(arrTarjeta2 , arrTarjetaAcceso) == true)
{
Serial.print("Tarjeta encontrada!!\n");
}
else
{
Serial.print("Tarjeta no encontrada!!\n");
}
}
